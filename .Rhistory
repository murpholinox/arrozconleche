comment = "*>", trim_ws = TRUE)
pdb<-prueba1$X1
nde<-stringr::str_replace(prueba1$X2, '�', '')
tde<-stringr::str_replace(prueba1$X3, '�', '')
sec0<-stringr::str_replace(prueba1$X4, '�', '')
sec<-stringr::str_replace_all(sec0, '\\\\n', '')
ulti<-length(sec)
repe <- seq(1,ulti)
lop<-c()
sec_original<-c("KVFGRCELAAAMKRHGLDNYRGYSLGNWVCAAKFESNFNTQATNRNTDGSTDYGILQINSRWWCNDGRTPGSRNLCNIPCSALLSSDITASVNCAKKIVSDGNGMNAWVAWRNRCKGTDVQAWIRGCRL")
for (i in repe) {
long_i<-str_length(sec[[i]])
lop<-c(lop,long_i)
if(long[[i]] != sec_original){
print(i)
}
}
prueba1 <-read_delim("/run/media/murphy/lolita/doctorado/prueba/prueba1",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
pdb<-prueba1$X1
nde<-stringr::str_replace(prueba1$X2, '�', '')
tde<-stringr::str_replace(prueba1$X3, '�', '')
sec0<-stringr::str_replace(prueba1$X4, '�', '')
sec<-stringr::str_replace_all(sec0, '\\\\n', '')
ulti<-length(sec)
repe <- seq(1,ulti)
lop<-c()
sec_original<-c("KVFGRCELAAAMKRHGLDNYRGYSLGNWVCAAKFESNFNTQATNRNTDGSTDYGILQINSRWWCNDGRTPGSRNLCNIPCSALLSSDITASVNCAKKIVSDGNGMNAWVAWRNRCKGTDVQAWIRGCRL")
for (i in repe) {
long_i<-str_length(sec[[i]])
lop<-c(lop,long_i)
if(long_i[[i]] != sec_original){
print(i)
}
}
prueba1 <-read_delim("/run/media/murphy/lolita/doctorado/prueba/prueba1",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
pdb<-prueba1$X1
nde<-stringr::str_replace(prueba1$X2, '�', '')
tde<-stringr::str_replace(prueba1$X3, '�', '')
sec0<-stringr::str_replace(prueba1$X4, '�', '')
sec<-stringr::str_replace_all(sec0, '\\\\n', '')
ulti<-length(sec)
repe <- seq(1,ulti)
lop<-c()
sec_original<-c("KVFGRCELAAAMKRHGLDNYRGYSLGNWVCAAKFESNFNTQATNRNTDGSTDYGILQINSRWWCNDGRTPGSRNLCNIPCSALLSSDITASVNCAKKIVSDGNGMNAWVAWRNRCKGTDVQAWIRGCRL")
for (i in repe) {
long_i<-str_length(sec[[i]])
lop<-c(lop,long_i)
if(sec[[i]] != sec_original){
print(i)
}
}
prueba1 <-read_delim("/run/media/murphy/lolita/doctorado/prueba/prueba1",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
pdb<-prueba1$X1
nde<-stringr::str_replace(prueba1$X2, '�', '')
tde<-stringr::str_replace(prueba1$X3, '�', '')
sec0<-stringr::str_replace(prueba1$X4, '�', '')
sec<-stringr::str_replace_all(sec0, '\\\\n', '')
ulti<-length(sec)
repe <- seq(1,ulti)
lop<-c()
sec_original<-c("KVFGRCELAAAMKRHGLDNYRGYSLGNWVCAAKFESNFNTQATNRNTDGSTDYGILQINSRWWCNDGRTPGSRNLCNIPCSALLSSDITASVNCAKKIVSDGNGMNAWVAWRNRCKGTDVQAWIRGCRL")
for (i in repe) {
long_i<-str_length(sec[[i]])
lop<-c(lop,long_i)
if(sec[[i]] != sec_original){
print(i)
}
}
ldp<-as.data.frame(lop)
#ldp = ldp[-1,]
prueba1<-data.frame(pdb, nde, tde, sec, ldp)
library(tidyverse)
library(knitr)
library(kableExtra)
prueba1 <-read_delim("/run/media/murphy/lolita/doctorado/prueba/prueba1",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
pdb<-prueba1$X1
nde<-stringr::str_replace(prueba1$X2, '�', '')
tde<-stringr::str_replace(prueba1$X3, '�', '')
sec0<-stringr::str_replace(prueba1$X4, '�', '')
sec<-stringr::str_replace_all(sec0, '\\\\n', '')
ulti<-length(sec)
repe <- seq(1,ulti)
lop<-c()
sec_original<-c("KVFGRCELAAAMKRHGLDNYRGYSLGNWVCAAKFESNFNTQATNRNTDGSTDYGILQINSRWWCNDGRTPGSRNLCNIPCSALLSSDITASVNCAKKIVSDGNGMNAWVAWRNRCKGTDVQAWIRGCRL")
for (i in repe) {
long_i<-str_length(sec[[i]])
lop<-c(lop,long_i)
if(sec[[i]] != sec_original){
print(i)
}
}
ldp<-as.data.frame(lop)
#ldp = ldp[-1,]
prueba1<-data.frame(pdb, nde, tde, sec, ldp)
prueba1 <-read_delim("/run/media/murphy/lolita/doctorado/prueba/prueba1",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
pdb<-prueba1$X1
nde<-stringr::str_replace(prueba1$X2, '�', '')
tde<-stringr::str_replace(prueba1$X3, '�', '')
sec0<-stringr::str_replace(prueba1$X4, '�', '')
sec<-stringr::str_replace_all(sec0, '\\\\n', '')
ulti<-length(sec)
repe <- seq(1,ulti)
lop<-c()
sec_original<-c("KVFGRCELAAAMKRHGLDNYRGYSLGNWVCAAKFESNFNTQATNRNTDGSTDYGILQINSRWWCNDGRTPGSRNLCNIPCSALLSSDITASVNCAKKIVSDGNGMNAWVAWRNRCKGTDVQAWIRGCRL")
for (i in repe) {
long_i<-str_length(sec[[i]])
lop<-c(lop,long_i)
if(sec[[i]] != sec_original){
print(i)
}
}
ldp<-as.data.frame(lop)
#ldp = ldp[-1,]
prueba1<-data.frame(pdb, nde, tde, sec, ldp)
prueba1 <-read_delim("/run/media/murphy/lolita/doctorado/prueba/prueba1",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
View(prueba1)
library(tidyverse)
library(knitr)
library(kableExtra)
todo2 <- read_delim("/run/media/murphy/lolita/doctorado/extract/todo2",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
# La configuración regional de mi sistema está en inglés, `R` también por lo que no reconoce '¿'.
pdb<-todo2$X1
nde<-stringr::str_replace(todo2$X2, '�', '')
tde<-stringr::str_replace(todo2$X3, '�', '')
ide<-stringr::str_replace(todo2$X4, '�', '')
nom<-stringr::str_replace(todo2$X5, '�', '')
tec<-stringr::str_replace(todo2$X6, '�', '')
peh<-stringr::str_replace(todo2$X7, '�', '')
con<-stringr::str_replace(todo2$X8, '�', '')
rs1<-stringr::str_replace(todo2$X9, '�', '')
rs2<-stringr::str_replace(todo2$X10, '�', '')
gpo<-stringr::str_replace(todo2$X11, '�', '')
doi<-stringr::str_replace(todo2$X12, '�', '')
datos<-data.frame(pdb, nde, tde, ide, nom, tec, peh, con, rs1, rs2, gpo, doi)
rm(pdb, nde, tde, ide, nom, tec, peh, con, rs1, rs2, gpo, doi)
# Cuidado con el tipo de las columnas.
datos$nde<-as.numeric(as.character((datos$nde)))
datos$peh<-as.numeric(as.character((datos$peh)))
datos$rs1<-as.numeric(as.character((datos$rs1)))
datos$rs2<-as.numeric(as.character((datos$rs2)))
# Verificamos los datos al graficar algunas variables interesantes:
theme_set(theme_bw())
# Histograma del pH.
ggplot(data = datos, aes(x=peh)) + geom_histogram(binwidth = 0.5) + labs(x="pH", y="Frecuencia") + xlim(1, 11)
# Histograma de la resolución.
ggplot(data = datos, aes(x=rs1)) + geom_histogram(binwidth = 0.1) + labs(x="Resolución (Å)", y="Frecuencia")
# Histograma del número de entidades.
ggplot(data = datos, aes(x=nde)) + geom_histogram(binwidth = 1) + labs(x="Número de entidades", y="Frecuencia")
# Determina cuentas por grupo de grupos espaciales y tido de entidad.
df1<-datos %>%
add_count(gpo, name = "cta_gpo")
df2<-df1 %>%
add_count(tde, name = "cta_tde")
tab_gpo<-datos %>%
count(gpo, name = "cta_gpo") %>%
arrange(desc(cta_gpo))
tab_tde<-datos %>%
count(tde, name = "cta_tde") %>%
arrange(desc(cta_tde))
# Gráfico de barras de los grupos espaciales.
ggplot(data = df1, aes(x=reorder(gpo, cta_gpo))) + geom_bar() + labs(x="Grupo espacial", y="Frecuencia") + theme(axis.text.x = element_text(angle = 90))
# Es interesante notar que el número de grupos espaciales es mayor a 65.
gpo_rar <- df2 %>%
filter(cta_gpo <= 15)
# Gráfico de barras de los grupos espaciales menos comunes.
ggplot(data = gpo_rar, aes(x=reorder(gpo, cta_gpo))) + geom_bar() + labs(x="Grupo espacial", y="Frecuencia", title = "Grupos espaciales con una frecuencia menor o igual a 15") + coord_flip()#+ theme(axis.text.x = element_text(size = 12, angle = 45))
# Genera tablas.
# Tabla de los cien grupos espaciales más comunes.
kable(tab_gpo) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
# Tabla del total, por grupo, del tipo de entidad.
kable(tab_tde) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
rm(todo2, df1, datos)
# Guarda datos como `.csv`.
write_excel_csv(df2, "/run/media/murphy/lolita/doctorado/extract/df2.csv")
# Filtro 0
fil0 <-df2 %>%
filter(!ide =="") # Si no tiene identificador se va.
# Filtro 1
fil1 <- fil0 %>%
filter(rs1 <= 2.0) # Mala resolución no me sirve.
# Filtro 2
fil2 <-fil1 %>%
filter(!is.na(peh)) # Si no tiene pH se va.
write_excel_csv(fil2, "/run/media/murphy/lolita/doctorado/clean/fil2.csv")
#wc -l fil2.csv
#69669 fil2.csv
# Carga fil3.
fil3 <- read_csv("/run/media/murphy/lolita/doctorado/clean/fil3.csv")
p00698 <- fil3 %>%
filter(ide == "P00698")
write_excel_csv(p00698, "/run/media/murphy/lolita/doctorado/prueba/p00698.csv")
p00698 <- fil3 %>%
filter(ide == "P00698")
write_excel_csv(p00698, "/run/media/murphy/lolita/doctorado/prueba/p00698.csv")
prueba1 <-read_delim("/run/media/murphy/lolita/doctorado/prueba/prueba1",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
pdb<-prueba1$X1
nde<-stringr::str_replace(prueba1$X2, '�', '')
tde<-stringr::str_replace(prueba1$X3, '�', '')
sec0<-stringr::str_replace(prueba1$X4, '�', '')
sec<-stringr::str_replace_all(sec0, '\\\\n', '')
ulti<-length(sec)
repe <- seq(1,ulti)
lop<-c()
bad_seq<-c()
sec_original<-c("KVFGRCELAAAMKRHGLDNYRGYSLGNWVCAAKFESNFNTQATNRNTDGSTDYGILQINSRWWCNDGRTPGSRNLCNIPCSALLSSDITASVNCAKKIVSDGNGMNAWVAWRNRCKGTDVQAWIRGCRL")
for (i in repe) {
long_i<-str_length(sec[[i]])
lop<-c(lop,long_i)
if(sec[[i]] != sec_original){
bad_seq<-c(bad_seq, "NotWt")
} else {
bad_seq<-c(bad_seq,"Wt")
}
}
ldp<-as.data.frame(lop)
#ldp = ldp[-1,]
prueba1<-data.frame(pdb, nde, tde, sec, ldp, bad_seq)
fil3cola <- fil3 %>%
count(ide, name="cta_ide") %>% # Colapsa los datos hacia n
arrange(desc(cta_ide))
#f3_nocola <- fil3 %>% # Agrega n
#  add_count(ide, name="cta_ide") %>%
#  arrange(desc(cta_ide)) # TODO: No necesario a menos que se necesite una gráfica ordenada por cta_ide.
# Una tabla
tab_fil3cola<-head(fil3cola, n=50) #Aquí escoge n.
kable(tab_fil3cola) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
write_excel_csv(tabla_f3_cola, "/run/media/murphy/lolita/doctorado/clean/tab_fil3cola.csv")
fil3cola <- fil3 %>%
count(ide, name="cta_ide") %>% # Colapsa los datos hacia n
arrange(desc(cta_ide))
#f3_nocola <- fil3 %>% # Agrega n
#  add_count(ide, name="cta_ide") %>%
#  arrange(desc(cta_ide)) # TODO: No necesario a menos que se necesite una gráfica ordenada por cta_ide.
# Una tabla
tab_fil3cola<-head(fil3cola, n=50) #Aquí escoge n.
kable(tab_fil3cola) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
write_excel_csv(tab_fil3cola, "/run/media/murphy/lolita/doctorado/clean/tab_fil3cola.csv")
ide_i <- fil3cola(fil3cola$ide)
View(fil3cola)
fil3cola$ide
tab_fil3cola$ide
ide_i<-tab_fil3cola$ide
for (x in ide_i)
{
print(ide_i)
}
ide_1
ide_i
str_split(ide_i, \"[:alnum:]\")
str_split(ide_i, "[:alnum:]")
ide_i[[1]]
ide_i[[2]]
length(ide_i)
```{r}
ide_i <- fil3cola(fil3cola$ide)
for (x in seq(1,50))
{
i<-ide_i[[x]]
print(i)
}
library(tidyverse)
library(knitr)
library(kableExtra)
todo2 <- read_delim("/run/media/murphy/lolita/doctorado/extract/todo2",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
# La configuración regional de mi sistema está en inglés, `R` también por lo que no reconoce '¿'.
pdb<-todo2$X1
nde<-stringr::str_replace(todo2$X2, '�', '')
tde<-stringr::str_replace(todo2$X3, '�', '')
ide<-stringr::str_replace(todo2$X4, '�', '')
nom<-stringr::str_replace(todo2$X5, '�', '')
tec<-stringr::str_replace(todo2$X6, '�', '')
peh<-stringr::str_replace(todo2$X7, '�', '')
con<-stringr::str_replace(todo2$X8, '�', '')
rs1<-stringr::str_replace(todo2$X9, '�', '')
rs2<-stringr::str_replace(todo2$X10, '�', '')
gpo<-stringr::str_replace(todo2$X11, '�', '')
doi<-stringr::str_replace(todo2$X12, '�', '')
datos<-data.frame(pdb, nde, tde, ide, nom, tec, peh, con, rs1, rs2, gpo, doi)
rm(pdb, nde, tde, ide, nom, tec, peh, con, rs1, rs2, gpo, doi)
# Cuidado con el tipo de las columnas.
datos$nde<-as.numeric(as.character((datos$nde)))
datos$peh<-as.numeric(as.character((datos$peh)))
datos$rs1<-as.numeric(as.character((datos$rs1)))
datos$rs2<-as.numeric(as.character((datos$rs2)))
# Verificamos los datos al graficar algunas variables interesantes:
theme_set(theme_bw())
# Histograma del pH.
ggplot(data = datos, aes(x=peh)) + geom_histogram(binwidth = 0.5) + labs(x="pH", y="Frecuencia") + xlim(1, 11)
# Histograma de la resolución.
ggplot(data = datos, aes(x=rs1)) + geom_histogram(binwidth = 0.1) + labs(x="Resolución (Å)", y="Frecuencia")
# Histograma del número de entidades.
ggplot(data = datos, aes(x=nde)) + geom_histogram(binwidth = 1) + labs(x="Número de entidades", y="Frecuencia")
# Determina cuentas por grupo de grupos espaciales y tido de entidad.
df1<-datos %>%
add_count(gpo, name = "cta_gpo")
df2<-df1 %>%
add_count(tde, name = "cta_tde")
tab_gpo<-datos %>%
count(gpo, name = "cta_gpo") %>%
arrange(desc(cta_gpo))
tab_tde<-datos %>%
count(tde, name = "cta_tde") %>%
arrange(desc(cta_tde))
# Gráfico de barras de los grupos espaciales.
ggplot(data = df1, aes(x=reorder(gpo, cta_gpo))) + geom_bar() + labs(x="Grupo espacial", y="Frecuencia") + theme(axis.text.x = element_text(angle = 90))
# Es interesante notar que el número de grupos espaciales es mayor a 65.
gpo_rar <- df2 %>%
filter(cta_gpo <= 15)
# Gráfico de barras de los grupos espaciales menos comunes.
ggplot(data = gpo_rar, aes(x=reorder(gpo, cta_gpo))) + geom_bar() + labs(x="Grupo espacial", y="Frecuencia", title = "Grupos espaciales con una frecuencia menor o igual a 15") + coord_flip()#+ theme(axis.text.x = element_text(size = 12, angle = 45))
# Genera tablas.
# Tabla de los cien grupos espaciales más comunes.
kable(tab_gpo) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
# Tabla del total, por grupo, del tipo de entidad.
kable(tab_tde) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
rm(todo2, df1, datos)
# Guarda datos como `.csv`.
write_excel_csv(df2, "/run/media/murphy/lolita/doctorado/extract/df2.csv")
# Filtro 0
fil0 <-df2 %>%
filter(!ide =="") # Si no tiene identificador se va.
# Filtro 1
fil1 <- fil0 %>%
filter(rs1 <= 2.0) # Mala resolución no me sirve.
# Filtro 2
fil2 <-fil1 %>%
filter(!is.na(peh)) # Si no tiene pH se va.
write_excel_csv(fil2, "/run/media/murphy/lolita/doctorado/clean/fil2.csv")
#wc -l fil2.csv
#69669 fil2.csv
# Carga fil3.
fil3 <- read_csv("/run/media/murphy/lolita/doctorado/clean/fil3.csv")
fil3cola <- fil3 %>%
count(ide, name="cta_ide") %>% # Colapsa los datos hacia n
arrange(desc(cta_ide))
#f3_nocola <- fil3 %>% # Agrega n
#  add_count(ide, name="cta_ide") %>%
#  arrange(desc(cta_ide)) # TODO: No necesario a menos que se necesite una gráfica ordenada por cta_ide.
# Una tabla
tab_fil3cola<-head(fil3cola, n=50) #Aquí escoge n.
kable(tab_fil3cola) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
write_excel_csv(tab_fil3cola, "/run/media/murphy/lolita/doctorado/clean/tab_fil3cola.csv")
ide_in_tf3c <- tab_fil3cola$ide
for (j in seq(1,50))
{
ide_i_ <-ide_in_tf3c[[j]]
filename <- paste("/run/media/murphy/lolita/doctorado/prueba/", ide_i_, ".csv", sep="")
write_excel_csv(filter(fil3, ide==ide_i_), filename)
}
ide_in_tf3c <- tab_fil3cola$ide
for (j in seq(1,50))
{
ide_i_ <-ide_in_tf3c[[j]]
filename <- paste("/run/media/murphy/lolita/doctorado/prueba/", ide_i_, ".csv", sep="")
write_excel_csv(filter(fil3, ide==ide_i_), filename)
}
ide_in_tf3c <- tab_fil3cola$ide
for (j in seq(1,50))
{
ide_i_ <-ide_in_tf3c[[j]]
filename <- paste("/run/media/murphy/lolita/doctorado/prueba/", ide_i_, ".csv", sep="")
write_excel_csv(filter(fil3, ide==ide_i_), filename)
}
ide_in_tf3c <- tab_fil3cola$ide
for (j in seq(1,50))
{
ide_i_ <-ide_in_tf3c[[j]]
filename <- paste("/run/media/murphy/lolita/doctorado/prueba/", ide_i_, sep="")
write_excel_csv(filter(fil3, ide==ide_i_), filename)
}
ide_in_tf3c <- tab_fil3cola$ide
for (j in seq(1,50))
{
ide_i_ <-ide_in_tf3c[[j]]
filename <- paste("/run/media/murphy/lolita/doctorado/prueba/", ide_i_, sep="")
write_excel_csv(filter(fil3, ide==ide_i_), filename)
}
ide_in_tf3c <- tab_fil3cola$ide
for (j in seq(1,50))
{
ide_i_ <-ide_in_tf3c[[j]]
filename <- paste("/run/media/murphy/lolita/doctorado/prueba/", ide_i_, sep="")
write_excel_csv(filter(fil3, ide==ide_i_), filename)
}
ide_in_tf3c <- tab_fil3cola$ide
for (j in seq(1,50))
{
ide_i_ <-ide_in_tf3c[[j]]
filename <- paste("/run/media/murphy/lolita/doctorado/prueba/", ide_i_, sep="")
write_excel_csv(filter(fil3, ide==ide_i_), filename)
}
library(tidyverse)
library(knitr)
library(kableExtra)
todo2 <- read_delim("/run/media/murphy/lolita/doctorado/extract/todo2",
"¿", escape_double = FALSE, col_names = FALSE,
comment = "*>", trim_ws = TRUE)
# La configuración regional de mi sistema está en inglés, `R` también por lo que no reconoce '¿'.
pdb<-todo2$X1
nde<-stringr::str_replace(todo2$X2, '�', '')
tde<-stringr::str_replace(todo2$X3, '�', '')
ide<-stringr::str_replace(todo2$X4, '�', '')
nom<-stringr::str_replace(todo2$X5, '�', '')
tec<-stringr::str_replace(todo2$X6, '�', '')
peh<-stringr::str_replace(todo2$X7, '�', '')
con<-stringr::str_replace(todo2$X8, '�', '')
rs1<-stringr::str_replace(todo2$X9, '�', '')
rs2<-stringr::str_replace(todo2$X10, '�', '')
gpo<-stringr::str_replace(todo2$X11, '�', '')
doi<-stringr::str_replace(todo2$X12, '�', '')
datos<-data.frame(pdb, nde, tde, ide, nom, tec, peh, con, rs1, rs2, gpo, doi)
rm(pdb, nde, tde, ide, nom, tec, peh, con, rs1, rs2, gpo, doi)
# Cuidado con el tipo de las columnas.
datos$nde<-as.numeric(as.character((datos$nde)))
datos$peh<-as.numeric(as.character((datos$peh)))
datos$rs1<-as.numeric(as.character((datos$rs1)))
datos$rs2<-as.numeric(as.character((datos$rs2)))
# Verificamos los datos al graficar algunas variables interesantes:
theme_set(theme_bw())
# Histograma del pH.
ggplot(data = datos, aes(x=peh)) + geom_histogram(binwidth = 0.5) + labs(x="pH", y="Frecuencia") + xlim(1, 11)
# Histograma de la resolución.
ggplot(data = datos, aes(x=rs1)) + geom_histogram(binwidth = 0.1) + labs(x="Resolución (Å)", y="Frecuencia")
# Histograma del número de entidades.
ggplot(data = datos, aes(x=nde)) + geom_histogram(binwidth = 1) + labs(x="Número de entidades", y="Frecuencia")
# Determina cuentas por grupo de grupos espaciales y tido de entidad.
df1<-datos %>%
add_count(gpo, name = "cta_gpo")
df2<-df1 %>%
add_count(tde, name = "cta_tde")
tab_gpo<-datos %>%
count(gpo, name = "cta_gpo") %>%
arrange(desc(cta_gpo))
tab_tde<-datos %>%
count(tde, name = "cta_tde") %>%
arrange(desc(cta_tde))
# Gráfico de barras de los grupos espaciales.
ggplot(data = df1, aes(x=reorder(gpo, cta_gpo))) + geom_bar() + labs(x="Grupo espacial", y="Frecuencia") + theme(axis.text.x = element_text(angle = 90))
# Es interesante notar que el número de grupos espaciales es mayor a 65.
gpo_rar <- df2 %>%
filter(cta_gpo <= 15)
# Gráfico de barras de los grupos espaciales menos comunes.
ggplot(data = gpo_rar, aes(x=reorder(gpo, cta_gpo))) + geom_bar() + labs(x="Grupo espacial", y="Frecuencia", title = "Grupos espaciales con una frecuencia menor o igual a 15") + coord_flip()#+ theme(axis.text.x = element_text(size = 12, angle = 45))
# Genera tablas.
# Tabla de los cien grupos espaciales más comunes.
kable(tab_gpo) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
# Tabla del total, por grupo, del tipo de entidad.
kable(tab_tde) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
rm(todo2, df1, datos)
# Guarda datos como `.csv`.
write_excel_csv(df2, "/run/media/murphy/lolita/doctorado/extract/df2.csv")
# Filtro 0
fil0 <-df2 %>%
filter(!ide =="") # Si no tiene identificador se va.
# Filtro 1
fil1 <- fil0 %>%
filter(rs1 <= 2.0) # Mala resolución no me sirve.
# Filtro 2
fil2 <-fil1 %>%
filter(!is.na(peh)) # Si no tiene pH se va.
write_excel_csv(fil2, "/run/media/murphy/lolita/doctorado/clean/fil2.csv")
#wc -l fil2.csv
#69669 fil2.csv
# Carga fil3.
fil3 <- read_csv("/run/media/murphy/lolita/doctorado/clean/fil3.csv")
fil3cola <- fil3 %>%
count(ide, name="cta_ide") %>% # Colapsa los datos hacia n
arrange(desc(cta_ide))
#f3_nocola <- fil3 %>% # Agrega n
#  add_count(ide, name="cta_ide") %>%
#  arrange(desc(cta_ide)) # TODO: No necesario a menos que se necesite una gráfica ordenada por cta_ide.
# Una tabla
tab_fil3cola<-head(fil3cola, n=50) #Aquí escoge n.
kable(tab_fil3cola) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width=F)
write_excel_csv(tab_fil3cola, "/run/media/murphy/lolita/doctorado/clean/tab_fil3cola.csv")
ide_in_tf3c <- tab_fil3cola$ide
for (j in seq(1,50))
{
ide_i_ <-ide_in_tf3c[[j]]
filename <- paste("/run/media/murphy/lolita/doctorado/prueba/", ide_i_, sep="")
write_excel_csv(filter(fil3, ide==ide_i_), filename)
}
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
